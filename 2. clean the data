{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"199hvaBKKUEB7AmvUFqZ5X0yZtGqTlZn1","timestamp":1675109069794}],"mount_file_id":"199hvaBKKUEB7AmvUFqZ5X0yZtGqTlZn1","authorship_tag":"ABX9TyOOnswGHeFaj1Ht6zbkTx0V"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/gdrive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N6PuOl6pg4AO","executionInfo":{"status":"ok","timestamp":1675456953468,"user_tz":-540,"elapsed":27757,"user":{"displayName":"YH Lin","userId":"13621128046372297072"}},"outputId":"61c0b008-864e-4d39-bac9-be6185d576f6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qTh7hczK20kt"},"outputs":[],"source":["import json \n","import pandas as pd \n","from pandas import json_normalize\n","import string\n","import re\n","\n","!pip install zhon\n","from zhon.hanzi import punctuation"]},{"cell_type":"code","source":["#import data crawled from PTT\n","with open('/content/h_female_crawl.json') as f:\n","  d = json.load(f)"],"metadata":{"id":"GmjmAJ4h3cxy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#save the post content only\n","content_list = list()\n","for code in d:\n","  content_list.append(d[code]['article']['content'])"],"metadata":{"id":"fNts5ZFG5Nuk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#clean the punctuation"],"metadata":{"id":"FOosrNpWAPxq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#remove'\\n'\n","i = 0\n","for i in range(len(content_list)):\n","  content_list[i] = content_list[i].replace('\\n',' ')\n","  i = i+1"],"metadata":{"id":"MmaMDcI9O8c9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#remove EN punctuation\n","for i in range(len(content_list)):\n","  content_list[i] = content_list[i].translate(str.maketrans('', '', string.punctuation))\n","  i = i+1"],"metadata":{"id":"Ik-cPpwwpoxp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#remove ZH punctuation\n","for i in range(len(content_list)):\n","  content_list[i] = content_list[i].translate(str.maketrans('', '', punctuation))\n","  i = i+1"],"metadata":{"id":"qMAls_zPcaXK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#save cleaned file\n","with open(\"h_female_clean.json\", \"w\") as output:\n","    output.write(json.dumps(str(content_list), ensure_ascii = False))"],"metadata":{"id":"gSATFsPmtxGs"},"execution_count":null,"outputs":[]}]}